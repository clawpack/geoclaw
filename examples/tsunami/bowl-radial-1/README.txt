begin_html  [use: doc/doc.css] [use:jsMath]
<!--   For a more readable version of this file, execute
                  unix>  make htmls
       in this directory and then point your browser to README.html 
     --------------------------------------------------------------  -->

<h2>
GeoClaw Sample Code
</h2>

Waves in a parabolic bowl generated by a Gaussian hump of water at the
origin.  The solution should remain circularly symmetric.

In this code, $x$ and $y$ are in meters (iccordsys=1 in [code:setrun.py]).

Refinement is allowed only in the upper right quadrant, using the regions
specified in [code:setrun.py], see 
[http://kingkong.amath.washington.edu/clawpack/users/regions.html].

Gauges are placed near the shore along the x-axis and along the diagonal.
Ideally these gauges would show identical results.

To run the code, see [link: #instructions Instructions]

<h4>
Plots of results
</h4>
After running this code and creating plots via "make .plots", you should be
able to view the plots in [link: _plots/_PlotIndex.html].


<h4>
Fortran files
</h4>


<dl>
<dt>[code: Makefile]
<dd> Determines which version of fortran files
are used when compiling the code with make and specifies where output and
plots should be directed.  Type "make .help" at the Unix prompt for options.


<dt>[code: setprob.f]
<dd>
Standard for for GeoClaw


</dl>

<h4>
Python files
</h4>
<dl>

<dt>[code: maketopo.py]
<dd> Used to create topo file and qinit data file.

<dt>[code: setrun.py]
<dd> This file contains a function that 
specifies what run-time parameters will be used.

<dt>[code: setplot.py]
<dd> This file contains a function that 
specifies what plots will be done and
sets various plotting parameters. 

</dl>


<h4>
Data files
</h4>

The .data files are automatically generated using the information in 
[code: setrun.py].


[name:  instructions]
<h4>
Instructions
</h4>


To make topo and qinit data files:
{{{
  $ make topo
}}}

To make all data files, edit setrun.py and then
{{{
  $ make .data
}}}

To run code:

You may need to type
{{{
  $ make new 
}}}
to make sure the modules are accessible.

Then run the code with
{{{
  $ make .output
}}}

To plot results, either generate html pages via:
{{{
  $ make .plots
}}}
or view interactively using ipython and Iplotclaw.

All of this can be done with:

{{{
  $ source make_all.py
}}}
end_html

